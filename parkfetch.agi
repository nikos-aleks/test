#!/usr/bin/env php
<?php
//	License for all code of this FreePBX module can be found in the license file inside the module directory
//	Copyright 2013 Schmooze Com Inc.
//

$restrict_mods = true;
include '/etc/freepbx.conf';

include FreePBX::Config()->get('ASTAGIDIR')."/phpagi.php";
$agi = new AGI();

$r = $astman->send_request('Command',array('Command'=>"parkedcalls show"));
if(preg_match('/no such command/i',$r['data'])) {
	//12 system, parking was redone
	$r = $astman->send_request('Command',array('Command'=>"parking show ".$argv[2]));
	if(preg_match('/no such command/i',$r['data'])) {
		exit (1);
	}
	$d=explode("\n",trim($r['data']));
	$next = false;
	foreach ($d as $k => $l) {
		if(!$next && preg_match('/Space\s*:\s*'.$argv[1].'/',$l)) {
			$next = true;
		} elseif($next && preg_match('/Channel\s*:\s*(.*)/',$l,$matches)) {
			if(empty($matches[1])) {
				exit;
			}
			$channel = $matches[1];
			break;
		}
	}
} else {
	$d=explode("\n",trim($r['data']));

	// Looks for the parking slot passed in the first ([0] column, if it finds it then
	// it get's the channel from the second ([1]) column.
	//
	$channel = '';
	foreach ($d as $l) {
		$p= preg_split('/ /', $l,-1,PREG_SPLIT_NO_EMPTY);
		if ($p[0] == $argv[1]) {
			$channel = $p[1];
			break;
		}
	}
}

if(empty($channel)) {
	$agi->verbose("No channel found. No one is parked on this slot [".$argv[1]."]");
} else {
	$agi->verbose("Found slot full with channel [".$channel."]");
	// Grab the Recording channel variables that we need to keep track of.
	$vars = array('MIXMON_DIR', 'YEAR', 'MONTH', 'DAY', 'CALLFILENAME', 'MIXMON_FORMAT', 'MIXMON_POST', 'MON_FMT', 'MIXMON_ID', 'REC_STATUS', 'REC_POLICY_MODE', 'RECORD_ID');
	foreach ($vars as $v) {
		$tmpvar = get_var('IMPORT("'.$channel.'",'.$v.')');
		if (!empty($tmpvar)) {
			$agi->set_variable($v, $tmpvar);
		}
	}
	$agi->set_variable("PARKIE", $channel);
}



function get_var($value) {
	global $agi;

	$r = $agi->get_variable( $value );
	if ($r['result'] == 1) {
		$result = $r['data'];
		return trim($result);
	}
	return '';
}
